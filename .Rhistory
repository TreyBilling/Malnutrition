geom_smooth(aes(x = hc71, y = hc72, color = hc27),
method = "lm") +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line()) +
scale_color_viridis_d()
ggplot(data = df) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "Pooled"),
method = "lm", se = F) +
geom_smooth(aes(x = hc71, y = hc72, color = hc27),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line()) +
scale_color_viridis_d()
ggplot(data = df) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
geom_smooth(aes(x = hc71, y = hc72, color = hc27),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top") +
scale_color_viridis_d(guide = guide_legend(title = ""))
ggplot(data = df) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top") +
scale_color_viridis_d(guide = F) +
facet_wrap(~NAME_1)
ggplot(data = df) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_classic() +
theme(axis.line = element_line(),
legend.position = "top") +
scale_color_viridis_d(guide = F) +
facet_wrap(~NAME_1)
ggplot(data = df) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top",
panel.grid = element_blank()) +
scale_color_viridis_d(guide = F) +
facet_wrap(~NAME_1)
load("nnk_covs.Rdata")
load("covs_nnk.Rdata")
View(df_covs)
covs <- df_covs %>% filter(NAME_0 == "Nigeria", year == 2007)
colnames(covs)
colnames(df)
covs <- df_covs %>% filter(NAME_0 == "Nigeria", year == 2008) %>%
select(-year)
df <- left_join(df, covs, by = c("NAME_0", "NAME_1", "year")
df <- left_join(df, covs, by = c("NAME_0", "NAME_1", "year"))
covs <- df_covs %>% filter(NAME_0 == "Nigeria", year == 2008)
df <- left_join(df, covs, by = c("NAME_0", "NAME_1", "year"))
View(df)
ggplot(data = df) +
geom_point(aes(x = gpw_lag1, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = gpw_lag1, y = hc72, color = "pooled"),
method = "lm", se = F) +
labs(x = "Population",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top",
panel.grid = element_blank()) +
scale_color_viridis_d(guide = F) +
facet_wrap(~NAME_1)
ggplot(data = df) +
geom_point(aes(x = gpw_lag1, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = gpw_lag1, y = hc72, color = "pooled"),
method = "lm", se = F) +
labs(x = "Population",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top",
panel.grid = element_blank()) +
scale_color_viridis_d(guide = F)
ggplot(data = df) +
geom_point(aes(x = log(gpw_lag1), y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = log(gpw_lag1), y = hc72, color = "pooled"),
method = "lm", se = F) +
labs(x = "Population",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top",
panel.grid = element_blank()) +
scale_color_viridis_d(guide = F)
ggplot(data = df) +
geom_point(aes(x = log(lights_v4_lag1), y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = log(lights_v4_lag1), y = hc72, color = "pooled"),
method = "lm", se = F) +
labs(x = "Lights",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top",
panel.grid = element_blank()) +
scale_color_viridis_d(guide = F)
library(lme4)
lmer1 <- lmer(hc72 ~ hc27 + (1 + log(lights_v4_lag1) | NAME_1),
data = df)
df$NAME_1 <- as.factor(df$NAME_1)
lmer1 <- lmer(hc72 ~ hc27 +
(1 + log(lights_v4_lag1) | NAME_1),
data = df)
lmer1 <- lmer(hc72 ~ hc27 + log(lights_v4_lag1) +
(1 + log(lights_v4_lag1) | NAME_1),
data = df)
table(df$NAME_1)
lmer1 <- lmer(hc72 ~  +
(1 |  NAME_1),
data = df)
summary(lmer1)
lmer1 <- lmer(hc72 ~  +
(1 + log(lights_v4_lag1) |NAME_1),
data = df)
summary(lmer1)
lmer1 <- lmer(hc72 ~  log(lights_v4_lag1) +
(1 + log(lights_v4_lag1) |NAME_1),
data = df)
summary(lmer1)
lmer1 <- lmer(hc72 ~  log(lights_v4_lag1) +
(1 | NAME_1),
data = df)
summary(lmer1)
lmer1 <- lmer(hc72 ~  hc27 + log(gpw_lag1) +log(lights_v4_lag1) + (1|NAME_1),
data = df)
summary(lmer1)
lmer1 <- lmer(hc72 ~ hc71 + hc27 + log(gpw_lag1) + log(lights_v4_lag1) +
(1|NAME_1),
data = df)
summary(lmer1)
lmer1 <- lmer(hc72 ~ hc71 + hc27 + log(gpw_lag1) + log(lights_v4_lag1) +
(1 + hc71|NAME_1),
data = df)
summary(lmer1)
ranef(lmer1)
coef(lmer1)
coef(lmer1)[,2]
coef(lmer1)[[1]]
coef(lmer1)[[1]][,2]
coef(lmer1)[[1]][2,]
coef(lmer1)[[1]][,2]
qplot(coef(lmer1)[[1]][,2])
summary(lmer1)
datasets <- dhs_datasets(surveyIds = survs$SurveyId,
fileFormat = "flat",
fileType = c("PR"),
surveyYear = c(2008, 2013))
varnames <- c("hv000",
"hc27",
"hv005",
"hc1",
"hc19",
"hc18",
"hc70",
"hc71",
"hc72")
questions <- search_variables(datasets$FileName,
variables = varnames,
reformat = T)
extract <- extract_dhs(questions, add_geo = T)
nga <- raster::getData(name = "GADM", country = "Nigeria", download = T, level = 1)
nga <- nga %>% st_as_sf()
crs <- st_crs(nga)
wants <- c("NG", "KN")
survs <- dhs_surveys(countryIds = wants,
surveyType = "DHS")
datasets <- dhs_datasets(surveyIds = survs$SurveyId,
fileFormat = "flat",
fileType = c("PR"),
surveyYear = c(2008, 2017))
varnames <- c("hv000",
"hc27",
"hv005",
"hc1",
"hc19",
"hc18",
"hc70",
"hc71",
"hc72")
questions <- search_variables(datasets$FileName,
variables = varnames,
reformat = T)
extract <- extract_dhs(questions, add_geo = T)
nga <- raster::getData(name = "GADM", country = "Nigeria", download = T, level = 1)
nga <- nga %>% st_as_sf()
crs <- st_crs(nga)
sf_extract <-
extract %>%
# filter out missing coords
map(function(z) filter(z, !is.na(LATNUM) & !is.na(LONGNUM))) %>%
# convert to sf object
map(function(x) st_as_sf(x, crs = crs, coords = c("LONGNUM", "LATNUM")))
wants <- c("NG", "KN")
wants <- c("NG", "KE")
survs <- dhs_surveys(countryIds = wants,
surveyType = "DHS")
datasets <- dhs_datasets(surveyIds = survs$SurveyId,
fileFormat = "flat",
fileType = c("PR"),
surveyYear = c(2008, 2017))
varnames <- c("hv000",
"hc27",
"hv005",
"hc1",
"hc19",
"hc18",
"hc70",
"hc71",
"hc72")
questions <- search_variables(datasets$FileName,
variables = varnames,
reformat = T)
extract <- extract_dhs(questions, add_geo = T)
# to find dhs country naming conventions
(cnames <- dhs_countries(returnFields = c("CountryName", "DHS_CountryCode"))
)
head(df)
ggplot(data = df) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
geom_smooth(aes(x = hc71, y = hc72, color = hc27),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score",
title = "Nigeria", subtitle = "DHS 2008") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top") +
scale_color_viridis_d(guide = guide_legend(title = ""))
wants <- c("NG", "KE")
survs <- dhs_surveys(countryIds = wants,
surveyType = "DHS")
datasets <- dhs_datasets(surveyIds = survs$SurveyId,
fileFormat = "flat",
fileType = c("PR"),
surveyYear = c(2003:2017))
# Pulling only a handfull of variables
varnames <- c("hv000", # survey id
"hc27", # sex
"hv005",
"hc1", # child age in months
"hc19", # survey year
"hc18", # survey month
"hc70",  # height for age z score
"hc71", # weight for age z score
"hc72") # weight for heigh z score
# Tell rdhs what variables and datasets to pull
questions <- search_variables(datasets$FileName,
variables = varnames,
reformat = T)
# Extract the surveys from rdhs into list
extract <- extract_dhs(questions, add_geo = T)
raster::ccodes()
ngaken <- c("Kenya", "Nigeria")
countries <- c("Kenya", "Nigeria")
shpfun <- function(country) {
raster::getData(name = "GADM", country = country, download = T, level = 1)
}
shps_afr <- map(countries, shpfun)
shp <- list(shps_afr, makeUniqueIDs = T) %>%
purrr::flatten() %>%
do.call(rbind, .) %>%
st_as_sf()
theme_set(theme_bw())
ggplot(data = shp) +
geom_sf() +
theme_sf()
ggplot(data = shp) +
geom_sf()
ggplot(data = shp) +
geom_sf() +
facet_wrap(~NAME_0, scales = "free")
ggplot(data = shp) +
geom_sf() +
coord_map() +
facet_wrap(~NAME_0, scales = "free")
ggplot(data = shp) +
geom_sf() +
facet_wrap(~NAME_0, scales = "free")
ggplot(data = shp) +
geom_sf() +
facet_wrap(~NAME_0)
# Function to clean and define DHS variables
clean_dhs <- function(data) {
data %>%
filter(hc1 <= 59 & as.numeric(hc72) < 9995 & as.numeric(hc71) < 9995 & as.numeric(hc70) < 9995) %>%
mutate(hc72 = as.numeric(hc72) / 100,
hc71 = as.numeric(hc71) / 100,
hc70 = as.numeric(hc70) / 100,
whz2 = ifelse(hc72 < -2, 1, 0 ),
haz2 = ifelse(hc70 < -2, 1, 0 ),
waz2 = ifelse(hc71 < -2, 1, 0 ),
month = hc18,
year = hc19,
ymd = lubridate::ymd(paste0(year, "-", month, "-01")))
}
sf_extract_clean <- sf_extract %>% map(clean_dhs)
# Function to map DHS cluster locations to ADM1 locations
finder <- function(data) {
simpler <- function(data) {
data %>% group_by(CLUSTER) %>%
summarise(n = n())}
data %>%
map(simpler) %>%
map(~st_join(.x, shp, join = st_intersects))
}
temp <- finder(sf_extract_clean) %>% do.call(sf:::rbind.sf, .)
sf_extract_big <- sf_extract_clean %>% do.call(sf:::rbind.sf, .)
sf_extract_big_nog <- sf_extract_big
st_geometry(sf_extract_big_nog) <- NULL
temp_nog <- temp
st_geometry(temp_nog) <- NULL
sf_extract_big_nog <- sf_extract_big_nog %>%
mutate(cc = substr(SurveyId, 1,2))
temp_nog <- temp_nog %>% mutate(cc = substr(GID_0, 1,2))
View(temp_nog)
df_m <- sf_extract_big_nog %>% left_join(temp_nog, by = c("CLUSTER", "cc"))
View(df_m)
View(sf_extract)
crs <- st_crs(shp)
sf_extract <-
extract %>%
# filter out missing coords
map(function(z) filter(z, !is.na(LATNUM) & !is.na(LONGNUM))) %>%
# convert to sf object
map(function(x) st_as_sf(x, crs = crs, coords = c("LONGNUM", "LATNUM")))
sf_extract_clean <- sf_extract %>% map(clean_dhs)
datasets <- dhs_datasets(surveyIds = survs$SurveyId,
fileFormat = "flat",
fileType = c("PR"),
surveyYear = c(2004:2017))
# Pulling only a handfull of variables
varnames <- c("hv000", # survey id
"hc27", # sex
"hv005",
"hc1", # child age in months
"hc19", # survey year
"hc18", # survey month
"hc70",  # height for age z score
"hc71", # weight for age z score
"hc72") # weight for heigh z score
# Tell rdhs what variables and datasets to pull
questions <- search_variables(datasets$FileName,
variables = varnames,
reformat = T)
# Extract the surveys from rdhs into list
extract <- extract_dhs(questions, add_geo = T)
# Shapefiles --------------------------------------------------------------
# Countries we want
countries <- c("Kenya", "Nigeria")
# Function to pull in GADM shapefiles from raster
shpfun <- function(country) {
raster::getData(name = "GADM", country = country, download = T, level = 1)
}
# Extract shapefiles and bind into one object
shps_afr <- map(countries, shpfun)
shp <- list(shps_afr, makeUniqueIDs = T) %>%
purrr::flatten() %>%
do.call(rbind, .) %>%
st_as_sf()
# Quick plot to make sure we're okay
ggplot(data = shp) +
geom_sf()
# Process DHS -------------------------------------------------------------
# Function to clean and define DHS variables
clean_dhs <- function(data) {
data %>%
filter(hc1 <= 59 & as.numeric(hc72) < 9995 & as.numeric(hc71) < 9995 & as.numeric(hc70) < 9995) %>%
mutate(hc72 = as.numeric(hc72) / 100,
hc71 = as.numeric(hc71) / 100,
hc70 = as.numeric(hc70) / 100,
whz2 = ifelse(hc72 < -2, 1, 0 ),
haz2 = ifelse(hc70 < -2, 1, 0 ),
waz2 = ifelse(hc71 < -2, 1, 0 ),
month = hc18,
year = hc19,
ymd = lubridate::ymd(paste0(year, "-", month, "-01")))
}
crs <- st_crs(shp)
sf_extract <-
extract %>%
# filter out missing coords
map(function(z) filter(z, !is.na(LATNUM) & !is.na(LONGNUM))) %>%
# convert to sf object
map(function(x) st_as_sf(x, crs = crs, coords = c("LONGNUM", "LATNUM")))
sf_extract_clean <- sf_extract %>% map(clean_dhs)
sf_extract_clean <- sf_extract %>% map(clean_dhs)
# Function to map DHS cluster locations to ADM1 locations
finder <- function(data) {
simpler <- function(data) {
data %>% group_by(CLUSTER) %>%
summarise(n = n())}
data %>%
map(simpler) %>%
map(~st_join(.x, shp, join = st_intersects))
}
temp <- finder(sf_extract_clean) %>% do.call(sf:::rbind.sf, .)
sf_extract_big <- sf_extract_clean %>% do.call(sf:::rbind.sf, .)
sf_extract_big_nog <- sf_extract_big
st_geometry(sf_extract_big_nog) <- NULL
temp_nog <- temp
st_geometry(temp_nog) <- NULL
sf_extract_big_nog <- sf_extract_big_nog %>%
mutate(cc = substr(SurveyId, 1,2))
temp_nog <- temp_nog %>% mutate(cc = substr(GID_0, 1,2))
df_m <- sf_extract_big_nog %>% left_join(temp_nog, by = c("CLUSTER", "cc"))
library(here)
save(df_m, file = here::here("Data", "dhs_kn_ng.Rdata"))
save(df_m, file = here::here("Data", "dhs_kn_ng.Rdata"))
ggplot(data = df_m) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
geom_smooth(aes(x = hc71, y = hc72, color = hc27),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top") +
scale_color_viridis_d(guide = guide_legend(title = "")) +
facet_wrap(~NAME_1)
ggplot(data = df_m) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
geom_smooth(aes(x = hc71, y = hc72, color = hc27),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top") +
scale_color_viridis_d(guide = guide_legend(title = "")) +
facet_wra0(~NAME_1)
ggplot(data = df_m) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
geom_smooth(aes(x = hc71, y = hc72, color = hc27),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top") +
scale_color_viridis_d(guide = guide_legend(title = "")) +
facet_wrap(~NAME_0)
ggplot(data = filter(df_m, !is.na(NAME_0))) +
geom_point(aes(x = hc71, y = hc72, color = hc27),
alpha = 0.05) +
geom_smooth(aes(x = hc71, y = hc72, color = "pooled"),
method = "lm", se = F) +
geom_smooth(aes(x = hc71, y = hc72, color = hc27),
method = "lm", se = F) +
labs(x = "Weight-for-age z-score",
y = "Weight-for-height z-score") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = "top") +
scale_color_viridis_d(guide = guide_legend(title = "")) +
facet_wrap(~NAME_0)
